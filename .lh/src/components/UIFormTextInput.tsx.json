{
    "sourceFile": "src/components/UIFormTextInput.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1681875915780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681876090461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import {\n   Group,\n+  Flex,\n   Text,\n   TextInput\n } from \"@mantine/core\";\n import type { TextInputProps } from '@mantine/core'\n@@ -8,15 +9,21 @@\n \n export const UIFormTextInput = (props: TextInputProps) => {\n   const { label, ...other } = props\n   return (\n-    <Group>\n+    <Flex>\n+\n       <Text>\n         {label}\n       </Text>\n+\n       <TextInput\n         size=\"xs\"\n+        sx={{\n+          flex: 1\n+        }}\n         {...other}\n       />\n-    </Group>\n+\n+    </Flex>\n   );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681876189502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import {\n+  Group,\n+  Flex,\n+  Text,\n+  TextInput\n+} from \"@mantine/core\";\n+import type { TextInputProps } from '@mantine/core'\n+\n+\n+export const UIFormTextInput = (props: TextInputProps) => {\n+  const { label, ...other } = props\n+  return (\n+    <Flex>\n+\n+      <Text\n+        sx={\n+          (theme) => ({\n+            width: '100px',\n+          })\n+        }\n+      >\n+        {label}\n+      </Text>\n+\n+      <TextInput\n+        size=\"xs\"\n+        sx={{\n+          flex: 1\n+        }}\n+        {...other}\n+      />\n+\n+    </Flex>\n+  );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681876207355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n       <Text\n         sx={\n           (theme) => ({\n             width: '100px',\n+            paddingRight: theme.spacing.xs\n           })\n         }\n       >\n         {label}\n@@ -31,34 +32,5 @@\n       />\n \n     </Flex>\n   );\n-};\n-import {\n-  Group,\n-  Flex,\n-  Text,\n-  TextInput\n-} from \"@mantine/core\";\n-import type { TextInputProps } from '@mantine/core'\n-\n-\n-export const UIFormTextInput = (props: TextInputProps) => {\n-  const { label, ...other } = props\n-  return (\n-    <Flex>\n-\n-      <Text>\n-        {label}\n-      </Text>\n-\n-      <TextInput\n-        size=\"xs\"\n-        sx={{\n-          flex: 1\n-        }}\n-        {...other}\n-      />\n-\n-    </Flex>\n-  );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681876273567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,13 @@\n \n export const UIFormTextInput = (props: TextInputProps) => {\n   const { label, ...other } = props\n   return (\n-    <Flex>\n-\n+    <Flex\n+    sx={(theme) => ({\n+      paddingBottom: theme.spacing.xs,\n+    })}\n+    >\n       <Text\n         sx={\n           (theme) => ({\n             width: '100px',\n"
                },
                {
                    "date": 1681876894011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+import {\n+  Group,\n+  Flex,\n+  Text,\n+  TextInput,\n+  ActionIcon\n+} from \"@mantine/core\";\n+import { IconRefresh } from '@tabler/icons-react'\n+import type { TextInputProps } from '@mantine/core'\n+\n+interface UIFormTextInputProps extends TextInputProps {\n+  onChecked?: () => void;\n+}\n+\n+export const UIFormTextInput = (props: UIFormTextInputProps) => {\n+  const { label, onChecked, ...other } = props\n+  return (\n+    <Flex\n+      sx={(theme) => ({\n+        paddingBottom: theme.spacing.xs,\n+      })}\n+    >\n+      <Text\n+        sx={\n+          (theme) => ({\n+            width: '100px',\n+            paddingRight: theme.spacing.xs\n+          })\n+        }\n+      >\n+        {label}\n+      </Text>\n+\n+      <TextInput\n+        size=\"xs\"\n+        sx={{\n+          flex: 1\n+        }}\n+        {...other}\n+      />\n+\n+      {\n+        onChecked && (\n+          <ActionIcon onClick={onChecked}>\n+            <IconRefresh />\n+          </ActionIcon>\n+        )\n+      }\n+\n+    </Flex>\n+  );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681876934469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,52 +40,13 @@\n       />\n \n       {\n         onChecked && (\n-          <ActionIcon onClick={onChecked}>\n-            <IconRefresh />\n+          <ActionIcon  size=\"xs\" onClick={onChecked}>\n+            <IconRefresh  size=\"0.725rem\"/>\n           </ActionIcon>\n         )\n       }\n \n     </Flex>\n   );\n-};\n-import {\n-  Group,\n-  Flex,\n-  Text,\n-  TextInput\n-} from \"@mantine/core\";\n-import type { TextInputProps } from '@mantine/core'\n-\n-\n-export const UIFormTextInput = (props: TextInputProps) => {\n-  const { label, ...other } = props\n-  return (\n-    <Flex\n-    sx={(theme) => ({\n-      paddingBottom: theme.spacing.xs,\n-    })}\n-    >\n-      <Text\n-        sx={\n-          (theme) => ({\n-            width: '100px',\n-            paddingRight: theme.spacing.xs\n-          })\n-        }\n-      >\n-        {label}\n-      </Text>\n-\n-      <TextInput\n-        size=\"xs\"\n-        sx={{\n-          flex: 1\n-        }}\n-        {...other}\n-      />\n-\n-    </Flex>\n-  );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681876967216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n export const UIFormTextInput = (props: UIFormTextInputProps) => {\n   const { label, onChecked, ...other } = props\n   return (\n     <Flex\n+      justify='center'\n+      align='center'\n       sx={(theme) => ({\n         paddingBottom: theme.spacing.xs,\n       })}\n     >\n"
                },
                {
                    "date": 1681877031199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,14 @@\n       />\n \n       {\n         onChecked && (\n-          <ActionIcon  size=\"xs\" onClick={onChecked}>\n+          <ActionIcon \n+            sx={(theme) => ({\n+              marginLeft: theme.spacing.xs\n+            })}\n+           size=\"xs\"\n+            onClick={onChecked}>\n             <IconRefresh  size=\"0.725rem\"/>\n           </ActionIcon>\n         )\n       }\n"
                },
                {
                    "date": 1681886067643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import {\n+  Group,\n+  Flex,\n+  Text,\n+  TextInput,\n+  ActionIcon\n+} from \"@mantine/core\";\n+import { IconRefresh } from '@tabler/icons-react'\n+import type { TextInputProps } from '@mantine/core'\n+\n+interface UIFormTextInputProps extends TextInputProps {\n+  onChecked?: () => void;\n+}\n+\n+export const UIFormTextInput = (props: UIFormTextInputProps) => {\n+  const { label, onChecked, ...other } = props\n+  return (\n+    <Flex\n+      justify='center'\n+      align='center'\n+      sx={(theme) => ({\n+        paddingBottom: theme.spacing.xs,\n+      })}\n+    >\n+      <Text\n+        sx={\n+          (theme) => ({\n+            width: '4rem',\n+            paddingRight: theme.spacing.xs\n+          })\n+        }\n+      >\n+        {label}\n+      </Text>\n+\n+      <TextInput\n+        size=\"xs\"\n+        sx={{\n+          flex: 1\n+        }}\n+        {...other}\n+      />\n+\n+      {\n+        onChecked && (\n+          <ActionIcon \n+            sx={(theme) => ({\n+              marginLeft: theme.spacing.xs\n+            })}\n+           size=\"xs\"\n+            onClick={onChecked}>\n+            <IconRefresh  size=\"0.725rem\"/>\n+          </ActionIcon>\n+        )\n+      }\n+\n+    </Flex>\n+  );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681886081610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n-            width: '4rem',\n+            width: '30%',\n             paddingRight: theme.spacing.xs\n           })\n         }\n       >\n@@ -55,64 +55,5 @@\n       }\n \n     </Flex>\n   );\n-};\n-import {\n-  Group,\n-  Flex,\n-  Text,\n-  TextInput,\n-  ActionIcon\n-} from \"@mantine/core\";\n-import { IconRefresh } from '@tabler/icons-react'\n-import type { TextInputProps } from '@mantine/core'\n-\n-interface UIFormTextInputProps extends TextInputProps {\n-  onChecked?: () => void;\n-}\n-\n-export const UIFormTextInput = (props: UIFormTextInputProps) => {\n-  const { label, onChecked, ...other } = props\n-  return (\n-    <Flex\n-      justify='center'\n-      align='center'\n-      sx={(theme) => ({\n-        paddingBottom: theme.spacing.xs,\n-      })}\n-    >\n-      <Text\n-        sx={\n-          (theme) => ({\n-            width: '100px',\n-            paddingRight: theme.spacing.xs\n-          })\n-        }\n-      >\n-        {label}\n-      </Text>\n-\n-      <TextInput\n-        size=\"xs\"\n-        sx={{\n-          flex: 1\n-        }}\n-        {...other}\n-      />\n-\n-      {\n-        onChecked && (\n-          <ActionIcon \n-            sx={(theme) => ({\n-              marginLeft: theme.spacing.xs\n-            })}\n-           size=\"xs\"\n-            onClick={onChecked}>\n-            <IconRefresh  size=\"0.725rem\"/>\n-          </ActionIcon>\n-        )\n-      }\n-\n-    </Flex>\n-  );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681886088153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n-            width: '30%',\n+            width: '40%',\n             paddingRight: theme.spacing.xs\n           })\n         }\n       >\n"
                },
                {
                    "date": 1681886258379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import {\n-  Group,\n   Flex,\n   Text,\n   TextInput,\n-  ActionIcon\n+  ActionIcon,\n+  \n } from \"@mantine/core\";\n import { IconRefresh } from '@tabler/icons-react'\n import type { TextInputProps } from '@mantine/core'\n \n@@ -14,46 +14,47 @@\n \n export const UIFormTextInput = (props: UIFormTextInputProps) => {\n   const { label, onChecked, ...other } = props\n   return (\n-    <Flex\n-      justify='center'\n-      align='center'\n-      sx={(theme) => ({\n-        paddingBottom: theme.spacing.xs,\n-      })}\n-    >\n-      <Text\n-        sx={\n-          (theme) => ({\n-            width: '40%',\n-            paddingRight: theme.spacing.xs\n-          })\n-        }\n+ \n+      <Flex\n+        justify='center'\n+        align='center'\n+        sx={(theme) => ({\n+          paddingBottom: theme.spacing.xs,\n+        })}\n       >\n-        {label}\n-      </Text>\n+        <Text\n+          sx={\n+            (theme) => ({\n+              width: '40%',\n+              paddingRight: theme.spacing.xs\n+            })\n+          }\n+        >\n+          {label}\n+        </Text>\n \n-      <TextInput\n-        size=\"xs\"\n-        sx={{\n-          flex: 1\n-        }}\n-        {...other}\n-      />\n+        <TextInput\n+          size=\"xs\"\n+          sx={{\n+            flex: 1\n+          }}\n+          {...other}\n+        />\n \n-      {\n-        onChecked && (\n-          <ActionIcon \n-            sx={(theme) => ({\n-              marginLeft: theme.spacing.xs\n-            })}\n-           size=\"xs\"\n-            onClick={onChecked}>\n-            <IconRefresh  size=\"0.725rem\"/>\n-          </ActionIcon>\n-        )\n-      }\n+        {\n+          onChecked && (\n+            <ActionIcon\n+              sx={(theme) => ({\n+                marginLeft: theme.spacing.xs\n+              })}\n+              size=\"xs\"\n+              onClick={onChecked}>\n+              <IconRefresh size=\"0.725rem\" />\n+            </ActionIcon>\n+          )\n+        }\n \n-    </Flex>\n+      </Flex>\n   );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681886414191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n               width: '40%',\n               paddingRight: theme.spacing.xs\n             })\n           }\n+          size='xs'\n         >\n           {label}\n         </Text>\n \n"
                },
                {
                    "date": 1681886431550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n               width: '40%',\n               paddingRight: theme.spacing.xs\n             })\n           }\n-          size='xs'\n+          size='sm'\n         >\n           {label}\n         </Text>\n \n"
                },
                {
                    "date": 1681887462893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+import {\n+  Flex,\n+  Text,\n+  TextInput,\n+  ActionIcon,\n+  Box\n+} from \"@mantine/core\";\n+import { IconRefresh } from '@tabler/icons-react'\n+import type { FC, PropsWithChildren } from 'react'\n+import type { TextInputProps } from '@mantine/core'\n+\n+interface UIFormTextInputProps extends TextInputProps {\n+  onChecked?: () => void;\n+}\n+\n+export const UIFormTextInput: FC<PropsWithChildren<UIFormTextInputProps>> = (props) => {\n+  const { label, onChecked, children } = props\n+  return (\n+\n+    <Flex\n+      justify='center'\n+      align='center'\n+      sx={(theme) => ({\n+        paddingBottom: theme.spacing.xs,\n+      })}\n+    >\n+      <Text\n+        sx={\n+          (theme) => ({\n+            width: '40%',\n+            paddingRight: theme.spacing.xs\n+          })\n+        }\n+        size='sm'\n+      >\n+        {label}\n+      </Text>\n+\n+      {/* <TextInput\n+        size=\"xs\"\n+        sx={{\n+          flex: 1\n+        }}\n+        {...other}\n+      /> */}\n+\n+      <Box\n+        sx={{\n+          flex: 1\n+        }}>\n+        {children}\n+      </Box>\n+\n+      {\n+        onChecked && (\n+          <ActionIcon\n+            sx={(theme) => ({\n+              marginLeft: theme.spacing.xs\n+            })}\n+            size=\"xs\"\n+            onClick={onChecked}>\n+            <IconRefresh size=\"0.725rem\" />\n+          </ActionIcon>\n+        )\n+      }\n+\n+    </Flex>\n+  );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681891922695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,20 +35,9 @@\n       >\n         {label}\n       </Text>\n \n-      {/* <TextInput\n-        size=\"xs\"\n-        sx={{\n-          flex: 1\n-        }}\n-        {...other}\n-      /> */}\n-\n-      <Box\n-        sx={{\n-          flex: 1\n-        }}>\n+      <Box>\n         {children}\n       </Box>\n \n       {\n@@ -65,66 +54,5 @@\n       }\n \n     </Flex>\n   );\n-};\n-import {\n-  Flex,\n-  Text,\n-  TextInput,\n-  ActionIcon,\n-  \n-} from \"@mantine/core\";\n-import { IconRefresh } from '@tabler/icons-react'\n-import type { TextInputProps } from '@mantine/core'\n-\n-interface UIFormTextInputProps extends TextInputProps {\n-  onChecked?: () => void;\n-}\n-\n-export const UIFormTextInput = (props: UIFormTextInputProps) => {\n-  const { label, onChecked, ...other } = props\n-  return (\n- \n-      <Flex\n-        justify='center'\n-        align='center'\n-        sx={(theme) => ({\n-          paddingBottom: theme.spacing.xs,\n-        })}\n-      >\n-        <Text\n-          sx={\n-            (theme) => ({\n-              width: '40%',\n-              paddingRight: theme.spacing.xs\n-            })\n-          }\n-          size='sm'\n-        >\n-          {label}\n-        </Text>\n-\n-        <TextInput\n-          size=\"xs\"\n-          sx={{\n-            flex: 1\n-          }}\n-          {...other}\n-        />\n-\n-        {\n-          onChecked && (\n-            <ActionIcon\n-              sx={(theme) => ({\n-                marginLeft: theme.spacing.xs\n-              })}\n-              size=\"xs\"\n-              onClick={onChecked}>\n-              <IconRefresh size=\"0.725rem\" />\n-            </ActionIcon>\n-          )\n-        }\n-\n-      </Flex>\n-  );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681891933988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   const { label, onChecked, children } = props\n   return (\n \n     <Flex\n-      justify='center'\n+      justify='space-evenly'\n       align='center'\n       sx={(theme) => ({\n         paddingBottom: theme.spacing.xs,\n       })}\n"
                },
                {
                    "date": 1681891948563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,22 +37,23 @@\n       </Text>\n \n       <Box>\n         {children}\n+\n+\n+        {\n+          onChecked && (\n+            <ActionIcon\n+              sx={(theme) => ({\n+                marginLeft: theme.spacing.xs\n+              })}\n+              size=\"xs\"\n+              onClick={onChecked}>\n+              <IconRefresh size=\"0.725rem\" />\n+            </ActionIcon>\n+          )\n+        }\n       </Box>\n \n-      {\n-        onChecked && (\n-          <ActionIcon\n-            sx={(theme) => ({\n-              marginLeft: theme.spacing.xs\n-            })}\n-            size=\"xs\"\n-            onClick={onChecked}>\n-            <IconRefresh size=\"0.725rem\" />\n-          </ActionIcon>\n-        )\n-      }\n-\n     </Flex>\n   );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681891974071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n+            textAlign: 'left',\n             width: '40%',\n             paddingRight: theme.spacing.xs\n           })\n         }\n"
                },
                {
                    "date": 1681892041578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n+            flex: 1,\n             textAlign: 'left',\n             width: '40%',\n             paddingRight: theme.spacing.xs\n           })\n@@ -38,23 +39,23 @@\n       </Text>\n \n       <Box>\n         {children}\n+      </Box>\n \n+      {\n+        onChecked && (\n+          <ActionIcon\n+            sx={(theme) => ({\n+              marginLeft: theme.spacing.xs\n+            })}\n+            size=\"xs\"\n+            onClick={onChecked}>\n+            <IconRefresh size=\"0.725rem\" />\n+          </ActionIcon>\n+        )\n+      }\n \n-        {\n-          onChecked && (\n-            <ActionIcon\n-              sx={(theme) => ({\n-                marginLeft: theme.spacing.xs\n-              })}\n-              size=\"xs\"\n-              onClick={onChecked}>\n-              <IconRefresh size=\"0.725rem\" />\n-            </ActionIcon>\n-          )\n-        }\n-      </Box>\n \n     </Flex>\n   );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681892078467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n-            flex: 1,\n+            \n             textAlign: 'left',\n             width: '40%',\n             paddingRight: theme.spacing.xs\n           })\n@@ -37,9 +37,13 @@\n       >\n         {label}\n       </Text>\n \n-      <Box>\n+      <Box sx={\n+        (theme) => ({\n+          width: '60%',\n+        })\n+      }>\n         {children}\n       </Box>\n \n       {\n"
                },
                {
                    "date": 1681892084865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       </Text>\n \n       <Box sx={\n         (theme) => ({\n-          width: '60%',\n+          width: '30%',\n         })\n       }>\n         {children}\n       </Box>\n"
                },
                {
                    "date": 1681892096097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       </Text>\n \n       <Box sx={\n         (theme) => ({\n-          width: '30%',\n+          flex: 1\n         })\n       }>\n         {children}\n       </Box>\n"
                },
                {
                    "date": 1681892829746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,10 @@\n       </Text>\n \n       <Box sx={\n         (theme) => ({\n-          flex: 1\n+          flex: 1,\n+          textAlign:'right'\n         })\n       }>\n         {children}\n       </Box>\n"
                },
                {
                    "date": 1681892970806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n-            \n+\n             textAlign: 'left',\n             width: '40%',\n             paddingRight: theme.spacing.xs\n           })\n@@ -37,16 +37,20 @@\n       >\n         {label}\n       </Text>\n \n-      <Box sx={\n-        (theme) => ({\n-          flex: 1,\n-          textAlign:'right'\n-        })\n-      }>\n+      <Flex\n+        justify='flex-end'\n+        align='center'\n+        sx={\n+          (theme) => ({\n+            flex: 1,\n+            display: 'flex',\n+\n+          })\n+        }>\n         {children}\n-      </Box>\n+      </Flex>\n \n       {\n         onChecked && (\n           <ActionIcon\n"
                },
                {
                    "date": 1681894718257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n     >\n       <Text\n         sx={\n           (theme) => ({\n-\n             textAlign: 'left',\n             width: '40%',\n             paddingRight: theme.spacing.xs\n           })\n"
                },
                {
                    "date": 1681973575798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,69 +1,57 @@\n-import {\n-  Flex,\n-  Text,\n-  TextInput,\n-  ActionIcon,\n-  Box\n-} from \"@mantine/core\";\n+import { Flex, Text, TextInput, ActionIcon, Box } from '@mantine/core'\n import { IconRefresh } from '@tabler/icons-react'\n import type { FC, PropsWithChildren } from 'react'\n import type { TextInputProps } from '@mantine/core'\n \n interface UIFormTextInputProps extends TextInputProps {\n-  onChecked?: () => void;\n+  onChecked?: () => void\n }\n \n-export const UIFormTextInput: FC<PropsWithChildren<UIFormTextInputProps>> = (props) => {\n+export const UIFormTextInput: FC<PropsWithChildren<UIFormTextInputProps>> = (\n+  props,\n+) => {\n   const { label, onChecked, children } = props\n   return (\n-\n     <Flex\n-      justify='space-evenly'\n-      align='center'\n+      justify=\"space-evenly\"\n+      align=\"center\"\n       sx={(theme) => ({\n         paddingBottom: theme.spacing.xs,\n       })}\n     >\n       <Text\n-        sx={\n-          (theme) => ({\n-            textAlign: 'left',\n-            width: '40%',\n-            paddingRight: theme.spacing.xs\n-          })\n-        }\n-        size='sm'\n+        sx={(theme) => ({\n+          textAlign: 'left',\n+          width: '40%',\n+          paddingRight: theme.spacing.xs,\n+        })}\n+        size=\"sm\"\n       >\n         {label}\n       </Text>\n \n       <Flex\n-        justify='flex-end'\n-        align='center'\n-        sx={\n-          (theme) => ({\n-            flex: 1,\n-            display: 'flex',\n-\n-          })\n-        }>\n+        justify=\"flex-end\"\n+        align=\"center\"\n+        sx={(theme) => ({\n+          flex: 1,\n+          display: 'flex',\n+        })}\n+      >\n\\ No newline at end of file\n         {children}\n       </Flex>\n \n-      {\n-        onChecked && (\n-          <ActionIcon\n-            sx={(theme) => ({\n-              marginLeft: theme.spacing.xs\n-            })}\n-            size=\"xs\"\n-            onClick={onChecked}>\n-            <IconRefresh size=\"0.725rem\" />\n-          </ActionIcon>\n-        )\n-      }\n-\n-\n+      {onChecked && (\n+        <ActionIcon\n+          sx={(theme) => ({\n+            marginLeft: theme.spacing.xs,\n+          })}\n+          size=\"xs\"\n+          onClick={onChecked}\n+        >\n+          <IconRefresh size=\"0.725rem\" />\n+        </ActionIcon>\n+      )}\n     </Flex>\n-  );\n-};\n+  )\n+}\n"
                }
            ],
            "date": 1681875915780,
            "name": "Commit-0",
            "content": "import {\n  Group,\n  Text,\n  TextInput\n} from \"@mantine/core\";\nimport type { TextInputProps } from '@mantine/core'\n\n\nexport const UIFormTextInput = (props: TextInputProps) => {\n  const { label, ...other } = props\n  return (\n    <Group>\n      <Text>\n        {label}\n      </Text>\n      <TextInput\n        size=\"xs\"\n        {...other}\n      />\n    </Group>\n  );\n};"
        }
    ]
}