{
    "sourceFile": "src/components/ChatContent.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 51,
            "patches": [
                {
                    "date": 1681921202802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681921899017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,33 @@\n+/*\n+ * @Author: Allen OYang\n+ * @Email:  allenwill211@gmail.com\n+ * @Date: 2023-04-20 00:19:37\n+ * @LastEditTime: 2023-04-20 00:31:38\n+ * @LastEditors: Allen OYang allenwill211@gmail.com\n+ * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n+ */\n \n-const ChatContent = () => {\n+import {\n+  Box,\n+  createStyles,\n+  Text\n+} from '@mantine/core';\n+import { getChat } from '@/stores/ChatAction';\n \n+export const ChatContent = () => {\n+  const chats = getChat()\n+\n+  return (\n+    <>\n+      {\n+        chats && chats.message.map((item, index) => {\n+          return (\n+            <Box key={item.id}>\n+              <Text>{item.content}</Text>\n+            </Box>\n+          )\n+        })\n+      }\n+    </>\n+  )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681922584012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 00:31:38\n+ * @LastEditTime: 2023-04-20 00:43:03\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -19,9 +19,9 @@\n \n   return (\n     <>\n       {\n-        chats && chats.message.map((item, index) => {\n+        chats && chats.message.map((item) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n"
                },
                {
                    "date": 1681922765100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 00:43:03\n+ * @LastEditTime: 2023-04-20 00:46:04\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -11,17 +11,21 @@\n   Box,\n   createStyles,\n   Text\n } from '@mantine/core';\n-import { getChat } from '@/stores/ChatAction';\n+import { findChat } from '@/stores/ChatAction';\n+import { useChatStore } from '@/stores/ChatStore';\n \n export const ChatContent = () => {\n-  const chats = getChat()\n+  const activeChatId = useChatStore((state) => state.activeChatId);\n \n+  const activeChats = findChat(activeChatId);\n+\n+\n   return (\n     <>\n       {\n-        chats && chats.message.map((item) => {\n+        activeChats && activeChats.message.map((item) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n"
                },
                {
                    "date": 1681922778641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,11 @@\n   const activeChatId = useChatStore((state) => state.activeChatId);\n \n   const activeChats = findChat(activeChatId);\n \n+  console.log('activeChats', activeChats)\n \n+\n   return (\n     <>\n       {\n         activeChats && activeChats.message.map((item) => {\n"
                },
                {
                    "date": 1681923105106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+/*\n+ * @Author: Allen OYang\n+ * @Email:  allenwill211@gmail.com\n+ * @Date: 2023-04-20 00:19:37\n+ * @LastEditTime: 2023-04-20 00:51:45\n+ * @LastEditors: Allen OYang allenwill211@gmail.com\n+ * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n+ */\n+\n+import {\n+  Box,\n+  createStyles,\n+  Text\n+} from '@mantine/core';\n+import { findChat } from '@/stores/ChatAction';\n+import { useChatStore } from '@/stores/ChatStore';\n+\n+export const ChatContent = () => {\n+\n+  const activeChatId = useChatStore((state) => state.activeChatId);\n+  const activeChats = findChat(activeChatId);\n+\n+\n+  return (\n+    <>\n+      {/* {\n+        activeChats && activeChats.message.map((item) => {\n+          return (\n+            <Box key={item.id}>\n+              <Text>{item.content}</Text>\n+            </Box>\n+          )\n+        })\n+      } */}\n+    </>\n+  )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681923453155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 00:51:45\n+ * @LastEditTime: 2023-04-20 00:57:32\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,58 +13,22 @@\n   Text\n } from '@mantine/core';\n import { findChat } from '@/stores/ChatAction';\n import { useChatStore } from '@/stores/ChatStore';\n+import { useEffect } from 'react'\n \n export const ChatContent = () => {\n-\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const activeChats = findChat(activeChatId);\n+  const activeChat = useChatStore( (state) => state.chats.find((chat) => {chat.id === activeChatId}))\n \n+  useEffect(() => {\n+    const get = findChat(activeChatId);\n+  }, [])\n \n   return (\n     <>\n-      {/* {\n-        activeChats && activeChats.message.map((item) => {\n-          return (\n-            <Box key={item.id}>\n-              <Text>{item.content}</Text>\n-            </Box>\n-          )\n-        })\n-      } */}\n-    </>\n-  )\n-}\n-/*\n- * @Author: Allen OYang\n- * @Email:  allenwill211@gmail.com\n- * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 00:46:04\n- * @LastEditors: Allen OYang allenwill211@gmail.com\n- * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n- */\n-\n-import {\n-  Box,\n-  createStyles,\n-  Text\n-} from '@mantine/core';\n-import { findChat } from '@/stores/ChatAction';\n-import { useChatStore } from '@/stores/ChatStore';\n-\n-export const ChatContent = () => {\n-  const activeChatId = useChatStore((state) => state.activeChatId);\n-\n-  const activeChats = findChat(activeChatId);\n-\n-  console.log('activeChats', activeChats)\n-\n-\n-  return (\n-    <>\n       {\n-        activeChats && activeChats.message.map((item) => {\n+        activeChat && activeChat.message.map((item) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n"
                },
                {
                    "date": 1681923479214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,13 @@\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n   const activeChat = useChatStore( (state) => state.chats.find((chat) => {chat.id === activeChatId}))\n+  console.log('activeChatId', activeChatId)\n+  // useEffect(() => {\n+    // const get = findChat(activeChatId);\n+  // }, [])\n \n-  useEffect(() => {\n-    const get = findChat(activeChatId);\n-  }, [])\n-\n   return (\n     <>\n       {\n         activeChat && activeChat.message.map((item) => {\n"
                },
                {
                    "date": 1681923530391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 00:57:32\n+ * @LastEditTime: 2023-04-20 00:58:50\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -18,9 +18,9 @@\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n   const activeChat = useChatStore( (state) => state.chats.find((chat) => {chat.id === activeChatId}))\n-  console.log('activeChatId', activeChatId)\n+  console.log('activeChatId', activeChat)\n   // useEffect(() => {\n     // const get = findChat(activeChatId);\n   // }, [])\n \n"
                },
                {
                    "date": 1681923546558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n import { useEffect } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const activeChat = useChatStore( (state) => state.chats.find((chat) => {chat.id === activeChatId}))\n+  const activeChat = useChatStore( (state) => state.chats.find((chat) => (chat.id === activeChatId)))\n   console.log('activeChatId', activeChat)\n   // useEffect(() => {\n     // const get = findChat(activeChatId);\n   // }, [])\n"
                },
                {
                    "date": 1681923633595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 00:58:50\n+ * @LastEditTime: 2023-04-20 01:00:33\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -18,9 +18,11 @@\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n   const activeChat = useChatStore( (state) => state.chats.find((chat) => (chat.id === activeChatId)))\n-  console.log('activeChatId', activeChat)\n+\n+  console.log('activeChatId', activeChatId)\n+  console.log('activeChat', activeChat)\n   // useEffect(() => {\n     // const get = findChat(activeChatId);\n   // }, [])\n \n"
                },
                {
                    "date": 1681923932302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 01:00:33\n+ * @LastEditTime: 2023-04-20 01:05:32\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,19 +13,17 @@\n   Text\n } from '@mantine/core';\n import { findChat } from '@/stores/ChatAction';\n import { useChatStore } from '@/stores/ChatStore';\n-import { useEffect } from 'react'\n+import { useEffect, useState } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const activeChat = useChatStore( (state) => state.chats.find((chat) => (chat.id === activeChatId)))\n+  const [activeChat, setActiveChat] = useState(findChat(activeChatId))\n \n-  console.log('activeChatId', activeChatId)\n-  console.log('activeChat', activeChat)\n-  // useEffect(() => {\n-    // const get = findChat(activeChatId);\n-  // }, [])\n+  useEffect(() => {\n+    useChatStore.subscribe((newState) => { setActiveChat(findChat(newState.activeChatId)) })\n+  }, [activeChatId])\n \n   return (\n     <>\n       {\n"
                },
                {
                    "date": 1681923972327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n import { useEffect, useState } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const [activeChat, setActiveChat] = useState(findChat(activeChatId))\n+  const [activeChat, setActiveChat] = useState(findChat(activeChatId) || null)\n \n   useEffect(() => {\n-    useChatStore.subscribe((newState) => { setActiveChat(findChat(newState.activeChatId)) })\n+    useChatStore.subscribe((newState) => { setActiveChat(findChat(newState.activeChatId) || null) })\n   }, [activeChatId])\n \n   return (\n     <>\n"
                },
                {
                    "date": 1681924037554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 01:05:32\n+ * @LastEditTime: 2023-04-20 01:07:17\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -17,18 +17,18 @@\n import { useEffect, useState } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const [activeChat, setActiveChat] = useState(findChat(activeChatId) || null)\n+  const [activeChat, setActiveChat] = useState<any>(null)\n \n   useEffect(() => {\n-    useChatStore.subscribe((newState) => { setActiveChat(findChat(newState.activeChatId) || null) })\n+    setActiveChat(findChat(activeChatId))\n   }, [activeChatId])\n \n   return (\n     <>\n       {\n-        activeChat && activeChat.message.map((item) => {\n+        activeChat && activeChat.message!.map((item) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n"
                },
                {
                    "date": 1681924088508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,25 +16,25 @@\n import { useChatStore } from '@/stores/ChatStore';\n import { useEffect, useState } from 'react'\n \n export const ChatContent = () => {\n-  const activeChatId = useChatStore((state) => state.activeChatId);\n-  const [activeChat, setActiveChat] = useState<any>(null)\n+  // const activeChatId = useChatStore((state) => state.activeChatId);\n+  // const [activeChat, setActiveChat] = useState<any>(null)\n \n-  useEffect(() => {\n-    setActiveChat(findChat(activeChatId))\n-  }, [activeChatId])\n+  // useEffect(() => {\n+  //   setActiveChat(findChat(activeChatId))\n+  // }, [activeChatId])\n \n   return (\n     <>\n-      {\n-        activeChat && activeChat.message!.map((item) => {\n+      {/* {\n+        activeChat && activeChat.message!.map((item: any) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n           )\n         })\n-      }\n+      } */}\n     </>\n   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681956115923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 01:07:17\n+ * @LastEditTime: 2023-04-20 10:01:55\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,28 +13,39 @@\n   Text\n } from '@mantine/core';\n import { findChat } from '@/stores/ChatAction';\n import { useChatStore } from '@/stores/ChatStore';\n-import { useEffect, useState } from 'react'\n+import { useEffect, useRef } from 'react'\n \n export const ChatContent = () => {\n-  // const activeChatId = useChatStore((state) => state.activeChatId);\n+  const activeChatId = useChatStore((state) => state.activeChatId);\n   // const [activeChat, setActiveChat] = useState<any>(null)\n+  const activeChat = useRef(useChatStore((state) => {\n+    if (!activeChatId) return;\n+    const chat = findChat(activeChatId)\n+    return chat\n+  }))\n \n-  // useEffect(() => {\n-  //   setActiveChat(findChat(activeChatId))\n-  // }, [activeChatId])\n \n+\n+  useEffect(() => {\n+    if (!activeChatId) return\n+    useChatStore.subscribe((state) => {\n+      const chat = findChat(activeChatId)\n+      activeChat.current = chat\n+    })\n+  }, [activeChatId])\n+\n   return (\n     <>\n-      {/* {\n-        activeChat && activeChat.message!.map((item: any) => {\n+      {\n+        activeChat.current && activeChat.current.message!.map((item: any) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n           )\n         })\n-      } */}\n+      }\n     </>\n   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681958539165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 10:01:55\n+ * @LastEditTime: 2023-04-20 10:42:19\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -17,35 +17,24 @@\n import { useEffect, useRef } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n+  const activeChat = findChat(activeChatId);\n   // const [activeChat, setActiveChat] = useState<any>(null)\n-  const activeChat = useRef(useChatStore((state) => {\n-    if (!activeChatId) return;\n-    const chat = findChat(activeChatId)\n-    return chat\n-  }))\n \n+  console.log('activeChatId', activeChatId)\n+  console.log('activeChat', activeChat)\n \n+  return (\n+    <>\n \n-  useEffect(() => {\n-    if (!activeChatId) return\n-    useChatStore.subscribe((state) => {\n-      const chat = findChat(activeChatId)\n-      activeChat.current = chat\n-    })\n-  }, [activeChatId])\n+      {!activeChatId ? <div>错误</div> : activeChat && activeChat.message!.map((item: any) => {\n+        return (\n+          <Box key={item.id}>\n+            <Text>{item.content}</Text>\n+          </Box>\n+        )\n+      })}\n \n-  return (\n-    <>\n-      {\n-        activeChat.current && activeChat.current.message!.map((item: any) => {\n-          return (\n-            <Box key={item.id}>\n-              <Text>{item.content}</Text>\n-            </Box>\n-          )\n-        })\n-      }\n     </>\n   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681959560649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 10:42:19\n+ * @LastEditTime: 2023-04-20 10:59:20\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -17,11 +17,11 @@\n import { useEffect, useRef } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const activeChat = findChat(activeChatId);\n+  const activeChat = findChat(activeChatId) || {message: []};\n   // const [activeChat, setActiveChat] = useState<any>(null)\n-\n+  console.log('test>>>>', activeChatId)\n   console.log('activeChatId', activeChatId)\n   console.log('activeChat', activeChat)\n \n   return (\n"
                },
                {
                    "date": 1681959594216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n   return (\n     <>\n \n-      {!activeChatId ? <div>错误</div> : activeChat && activeChat.message!.map((item: any) => {\n+      {!activeChatId ? <div>错误</div> :  activeChat.message!.map((item: any) => {\n         return (\n           <Box key={item.id}>\n             <Text>{item.content}</Text>\n           </Box>\n"
                },
                {
                    "date": 1681959619677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,11 @@\n     <>\n \n       {!activeChatId ? <div>错误</div> :  activeChat.message!.map((item: any) => {\n         return (\n-          <Box key={item.id}>\n-            <Text>{item.content}</Text>\n-          </Box>\n+          <div key={item.id}>\n+            <p>{item.content}</p>\n+          </div>\n         )\n       })}\n \n     </>\n"
                },
                {
                    "date": 1681959652140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 10:59:20\n+ * @LastEditTime: 2023-04-20 11:00:50\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -29,9 +29,9 @@\n \n       {!activeChatId ? <div>错误</div> :  activeChat.message!.map((item: any) => {\n         return (\n           <div key={item.id}>\n-            <p>{item.content}</p>\n+            <div>{item.content}</div>\n           </div>\n         )\n       })}\n \n"
                },
                {
                    "date": 1681959753909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:00:50\n+ * @LastEditTime: 2023-04-20 11:02:33\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,22 +13,24 @@\n   Text\n } from '@mantine/core';\n import { findChat } from '@/stores/ChatAction';\n import { useChatStore } from '@/stores/ChatStore';\n-import { useEffect, useRef } from 'react'\n+import { useEffect, useRef, useMemo } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const activeChat = findChat(activeChatId) || {message: []};\n-  // const [activeChat, setActiveChat] = useState<any>(null)\n-  console.log('test>>>>', activeChatId)\n-  console.log('activeChatId', activeChatId)\n-  console.log('activeChat', activeChat)\n+  // const activeChat = findChat(activeChatId)\n \n+  const activeChat = useMemo(() => {\n+    if (activeChatId) {\n+      return findChat(activeChatId)\n+    }\n+  }, [activeChatId]])\n+\n   return (\n     <>\n \n-      {!activeChatId ? <div>错误</div> :  activeChat.message!.map((item: any) => {\n+      {!activeChatId ? <div>错误</div> : activeChat && activeChat.message!.map((item: any) => {\n         return (\n           <div key={item.id}>\n             <div>{item.content}</div>\n           </div>\n"
                },
                {
                    "date": 1681960090466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:02:33\n+ * @LastEditTime: 2023-04-20 11:08:10\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,19 +13,18 @@\n   Text\n } from '@mantine/core';\n import { findChat } from '@/stores/ChatAction';\n import { useChatStore } from '@/stores/ChatStore';\n-import { useEffect, useRef, useMemo } from 'react'\n+import { useEffect, useRef, useState } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  // const activeChat = findChat(activeChatId)\n+  const [activeChat, setActiveChat] = useState({ message: [] });\n \n-  const activeChat = useMemo(() => {\n-    if (activeChatId) {\n-      return findChat(activeChatId)\n-    }\n-  }, [activeChatId]])\n+  useEffect(() => {\n+    console.log('activeChatId', activeChatId)\n+    setActiveChat( findChat(activeChatId))\n+  }, [activeChatId])\n \n   return (\n     <>\n \n"
                },
                {
                    "date": 1681960103657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,13 @@\n import { useEffect, useRef, useState } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const [activeChat, setActiveChat] = useState({ message: [] });\n+  const [activeChat, setActiveChat] = useState<any>({ message: [] });\n \n   useEffect(() => {\n     console.log('activeChatId', activeChatId)\n-    setActiveChat( findChat(activeChatId))\n+    setActiveChat(findChat(activeChatId))\n   }, [activeChatId])\n \n   return (\n     <>\n"
                },
                {
                    "date": 1681960147413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,13 @@\n   const activeChatId = useChatStore((state) => state.activeChatId);\n   const [activeChat, setActiveChat] = useState<any>({ message: [] });\n \n   useEffect(() => {\n-    console.log('activeChatId', activeChatId)\n-    setActiveChat(findChat(activeChatId))\n+    if (activeChatId) {\n+      console.log('activeChatId', activeChatId)\n+      setActiveChat(findChat(activeChatId))\n+    }\n+ \n   }, [activeChatId])\n \n   return (\n     <>\n"
                },
                {
                    "date": 1681960878943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:08:10\n+ * @LastEditTime: 2023-04-20 11:21:18\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -12,33 +12,28 @@\n   createStyles,\n   Text\n } from '@mantine/core';\n import { findChat } from '@/stores/ChatAction';\n-import { useChatStore } from '@/stores/ChatStore';\n-import { useEffect, useRef, useState } from 'react'\n+import { useChatStore, Chat } from '@/stores/ChatStore';\n+import { useEffect, useState } from 'react'\n \n+\n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const [activeChat, setActiveChat] = useState<any>({ message: [] });\n+  const [activeChat, setActiveChat] = useState<Chat | undefined>();\n \n   useEffect(() => {\n-    if (activeChatId) {\n-      console.log('activeChatId', activeChatId)\n-      setActiveChat(findChat(activeChatId))\n-    }\n- \n-  }, [activeChatId])\n+    setActiveChat(findChat(activeChatId));\n+  }, [activeChatId]);\n \n   return (\n     <>\n-\n-      {!activeChatId ? <div>错误</div> : activeChat && activeChat.message!.map((item: any) => {\n+      {!activeChatId ? <div>错误</div> : activeChat ? activeChat.message!.map((item: any) => {\n         return (\n-          <div key={item.id}>\n-            <div>{item.content}</div>\n-          </div>\n+          <Box key={item.id}>\n+            <Text>{item.content}</Text>\n+          </Box>\n         )\n-      })}\n-\n+      }) : <div>加载中...</div>}\n     </>\n   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681961042391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:21:18\n+ * @LastEditTime: 2023-04-20 11:24:02\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -24,8 +24,14 @@\n   useEffect(() => {\n     setActiveChat(findChat(activeChatId));\n   }, [activeChatId]);\n \n+  useEffect(() => {\n+    if (activeChatId && !activeChat) {\n+      setActiveChat(findChat(activeChatId));\n+    }\n+  }, []);\n+\n   return (\n     <>\n       {!activeChatId ? <div>错误</div> : activeChat ? activeChat.message!.map((item: any) => {\n         return (\n"
                },
                {
                    "date": 1681961244384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:24:02\n+ * @LastEditTime: 2023-04-20 11:27:23\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -30,16 +30,22 @@\n       setActiveChat(findChat(activeChatId));\n     }\n   }, []);\n \n+  if (!activeChatId) {\n+    return <> NOT ACTIVE CHAT ID</>\n+  }\n+\n   return (\n     <>\n-      {!activeChatId ? <div>错误</div> : activeChat ? activeChat.message!.map((item: any) => {\n-        return (\n-          <Box key={item.id}>\n-            <Text>{item.content}</Text>\n-          </Box>\n-        )\n-      }) : <div>加载中...</div>}\n+      {\n+        activeChat && activeChat.message!.map((item: any) => {\n+          return (\n+            <Box key={item.id}>\n+              <Text>{item.content}</Text>\n+            </Box>\n+          )\n+        })\n+      }\n     </>\n   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681961401101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:27:23\n+ * @LastEditTime: 2023-04-20 11:30:01\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -18,24 +18,14 @@\n \n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n-  const [activeChat, setActiveChat] = useState<Chat | undefined>();\n \n-  useEffect(() => {\n-    setActiveChat(findChat(activeChatId));\n-  }, [activeChatId]);\n+  const activeChat = useChatStore((state) => {\n+    return state.chats.find((item: Chat) => item.id === activeChatId)\n+  })\n \n-  useEffect(() => {\n-    if (activeChatId && !activeChat) {\n-      setActiveChat(findChat(activeChatId));\n-    }\n-  }, []);\n \n-  if (!activeChatId) {\n-    return <> NOT ACTIVE CHAT ID</>\n-  }\n-\n   return (\n     <>\n       {\n         activeChat && activeChat.message!.map((item: any) => {\n"
                },
                {
                    "date": 1681961559092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:30:01\n+ * @LastEditTime: 2023-04-20 11:32:39\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -19,17 +19,20 @@\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId);\n \n-  const activeChat = useChatStore((state) => {\n-    return state.chats.find((item: Chat) => item.id === activeChatId)\n-  })\n+  // const activeChat = useChatStore((state) => {\n+  //   return state.chats.find((item: Chat) => item.id === activeChatId)\n+  // })\n \n+  const chats = useChatStore((state) => state.chats);\n \n+  const activeChat = chats.find((chat) => chat.id === activeChatId);\n+\n   return (\n     <>\n       {\n-        activeChat && activeChat.message!.map((item: any) => {\n+         activeChat?.message!.map((item) => {\n           return (\n             <Box key={item.id}>\n               <Text>{item.content}</Text>\n             </Box>\n"
                },
                {
                    "date": 1681961610534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n   const chats = useChatStore((state) => state.chats);\n \n   const activeChat = chats.find((chat) => chat.id === activeChatId);\n \n+  console.log('activeChat', activeChat)\n   return (\n     <>\n       {\n          activeChat?.message!.map((item) => {\n"
                },
                {
                    "date": 1681974703448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,38 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 11:32:39\n+ * @LastEditTime: 2023-04-20 15:11:43\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n-import {\n-  Box,\n-  createStyles,\n-  Text\n-} from '@mantine/core';\n-import { findChat } from '@/stores/ChatAction';\n-import { useChatStore, Chat } from '@/stores/ChatStore';\n+import { Box, createStyles, Text } from '@mantine/core'\n+import { findChat } from '@/stores/ChatAction'\n+import { useChatStore, Chat } from '@/stores/ChatStore'\n import { useEffect, useState } from 'react'\n \n-\n export const ChatContent = () => {\n-  const activeChatId = useChatStore((state) => state.activeChatId);\n+  const activeChatId = useChatStore((state) => state.activeChatId)\n \n   // const activeChat = useChatStore((state) => {\n   //   return state.chats.find((item: Chat) => item.id === activeChatId)\n   // })\n \n-  const chats = useChatStore((state) => state.chats);\n+  const chats = useChatStore((state) => state.chats)\n \n-  const activeChat = chats.find((chat) => chat.id === activeChatId);\n+  const activeChat = chats.find((chat) => chat.id === activeChatId)\n \n   console.log('activeChat', activeChat)\n   return (\n     <>\n-      {\n-         activeChat?.message!.map((item) => {\n-          return (\n-            <Box key={item.id}>\n-              <Text>{item.content}</Text>\n\\ No newline at end of file\n-            </Box>\n-          )\n-        })\n-      }\n+      {activeChat?.message!.map((item) => {\n+        return (\n+          <Box key={item.id}>\n+            <Text>{item.content}</Text>\n+          </Box>\n+        )\n+      })}\n     </>\n   )\n-}\n+}\n"
                },
                {
                    "date": 1681974998098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,13 @@\n \n import { Box, createStyles, Text } from '@mantine/core'\n import { findChat } from '@/stores/ChatAction'\n import { useChatStore, Chat } from '@/stores/ChatStore'\n-import { useEffect, useState } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n+  const activeChat = findChat(activeChatId!)\n \n-  // const activeChat = useChatStore((state) => {\n-  //   return state.chats.find((item: Chat) => item.id === activeChatId)\n-  // })\n-\n-  const chats = useChatStore((state) => state.chats)\n-\n-  const activeChat = chats.find((chat) => chat.id === activeChatId)\n-\n   console.log('activeChat', activeChat)\n   return (\n     <>\n       {activeChat?.message!.map((item) => {\n"
                },
                {
                    "date": 1681975082554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,22 +9,18 @@\n \n import { Box, createStyles, Text } from '@mantine/core'\n import { findChat } from '@/stores/ChatAction'\n import { useChatStore, Chat } from '@/stores/ChatStore'\n+import { ChatMessage } from './ChatMessage'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n   const activeChat = findChat(activeChatId!)\n \n-  console.log('activeChat', activeChat)\n   return (\n     <>\n       {activeChat?.message!.map((item) => {\n-        return (\n-          <Box key={item.id}>\n-            <Text>{item.content}</Text>\n-          </Box>\n-        )\n+        return <ChatMessage key={item.id} message={item} />\n       })}\n     </>\n   )\n }\n"
                },
                {
                    "date": 1681976989795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 15:11:43\n+ * @LastEditTime: 2023-04-20 15:49:45\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -12,10 +12,13 @@\n import { useChatStore, Chat } from '@/stores/ChatStore'\n import { ChatMessage } from './ChatMessage'\n \n export const ChatContent = () => {\n-  const activeChatId = useChatStore((state) => state.activeChatId)\n-  const activeChat = findChat(activeChatId!)\n+  // const activeChatId = useChatStore((state) => state.activeChatId)\n+  // const activeChat = findChat(activeChatId!)\n+  const activeChat = useChatStore((state) => {\n+    return state.chats.find((item) => item.id === state.activeChatId)\n+  })\n \n   return (\n     <>\n       {activeChat?.message!.map((item) => {\n"
                },
                {
                    "date": 1681977103213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,12 @@\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n import { Box, createStyles, Text } from '@mantine/core'\n-import { findChat } from '@/stores/ChatAction'\n import { useChatStore, Chat } from '@/stores/ChatStore'\n import { ChatMessage } from './ChatMessage'\n \n export const ChatContent = () => {\n-  // const activeChatId = useChatStore((state) => state.activeChatId)\n-  // const activeChat = findChat(activeChatId!)\n   const activeChat = useChatStore((state) => {\n     return state.chats.find((item) => item.id === state.activeChatId)\n   })\n \n"
                },
                {
                    "date": 1681979502951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 15:49:45\n+ * @LastEditTime: 2023-04-20 16:31:42\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -12,9 +12,9 @@\n import { ChatMessage } from './ChatMessage'\n \n export const ChatContent = () => {\n   const activeChat = useChatStore((state) => {\n-    return state.chats.find((item) => item.id === state.activeChatId)\n+    return state.chats[state.activeChatId!] || null\n   })\n \n   return (\n     <>\n"
                },
                {
                    "date": 1681980114937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 16:31:42\n+ * @LastEditTime: 2023-04-20 16:41:54\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -11,10 +11,11 @@\n import { useChatStore, Chat } from '@/stores/ChatStore'\n import { ChatMessage } from './ChatMessage'\n \n export const ChatContent = () => {\n+  const activeChatId = useChatStore((state) => state.activeChatId)\n   const activeChat = useChatStore((state) => {\n-    return state.chats[state.activeChatId!] || null\n+    return state.chats[activeChatId!] || null\n   })\n \n   return (\n     <>\n"
                },
                {
                    "date": 1681980294774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,31 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 16:41:54\n+ * @LastEditTime: 2023-04-20 16:44:52\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n import { Box, createStyles, Text } from '@mantine/core'\n import { useChatStore, Chat } from '@/stores/ChatStore'\n import { ChatMessage } from './ChatMessage'\n+import { useMemo } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n-  const activeChat = useChatStore((state) => {\n-    return state.chats[activeChatId!] || null\n-  })\n+  const activeChat = useChatStore((state) => state.chats[activeChatId!])\n \n+  const content = useMemo(() => {\n+    if (activeChat?.message) return activeChat?.message\n+\n+    return []\n+  }, [activeChat.message])\n+\n   return (\n     <>\n-      {activeChat?.message!.map((item) => {\n+      {content.map((item) => {\n         return <ChatMessage key={item.id} message={item} />\n       })}\n     </>\n   )\n"
                },
                {
                    "date": 1681980336640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,10 @@\n \n     return []\n   }, [activeChat.message])\n \n+  console.log('activeChat', activeChat)\n+\n   return (\n     <>\n       {content.map((item) => {\n         return <ChatMessage key={item.id} message={item} />\n"
                },
                {
                    "date": 1681980401332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 16:44:52\n+ * @LastEditTime: 2023-04-20 16:46:39\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,18 +13,20 @@\n import { useMemo } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n-  const activeChat = useChatStore((state) => state.chats[activeChatId!])\n+  const chats = useChatStore((state) => state.chats)\n \n-  const content = useMemo(() => {\n-    if (activeChat?.message) return activeChat?.message\n+  const content = chats[activeChatId!] || []\n \n-    return []\n-  }, [activeChat.message])\n+  // const content = useMemo(() => {\n+  //   if (activeChat?.message) return activeChat?.message\n \n-  console.log('activeChat', activeChat)\n+  //   return []\n+  // }, [activeChat.message])\n \n+  // console.log('activeChat', activeChat)\n+\n   return (\n     <>\n       {content.map((item) => {\n         return <ChatMessage key={item.id} message={item} />\n"
                },
                {
                    "date": 1681980436380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n   const chats = useChatStore((state) => state.chats)\n \n-  const content = chats[activeChatId!] || []\n+  const activeChat = chats[activeChatId!]\n \n   // const content = useMemo(() => {\n   //   if (activeChat?.message) return activeChat?.message\n \n@@ -27,10 +27,11 @@\n   // console.log('activeChat', activeChat)\n \n   return (\n     <>\n-      {content.map((item) => {\n-        return <ChatMessage key={item.id} message={item} />\n-      })}\n+      {activeChat &&\n+        activeChat.message.map((item) => {\n+          return <ChatMessage key={item.id} message={item} />\n+        })}\n     </>\n   )\n }\n"
                },
                {
                    "date": 1681980530807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 16:46:39\n+ * @LastEditTime: 2023-04-20 16:48:50\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -23,9 +23,9 @@\n \n   //   return []\n   // }, [activeChat.message])\n \n-  // console.log('activeChat', activeChat)\n+  console.log('activeChat', activeChat)\n \n   return (\n     <>\n       {activeChat &&\n"
                },
                {
                    "date": 1681980629161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 16:48:50\n+ * @LastEditTime: 2023-04-20 16:50:28\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -13,25 +13,24 @@\n import { useMemo } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n-  const chats = useChatStore((state) => state.chats)\n+  const message = useChatStore((state) => state.chats[activeChatId!].message)\n \n-  const activeChat = chats[activeChatId!]\n+  // const activeChat = chats[activeChatId!]\n \n   // const content = useMemo(() => {\n   //   if (activeChat?.message) return activeChat?.message\n \n   //   return []\n   // }, [activeChat.message])\n \n-  console.log('activeChat', activeChat)\n+  console.log('activeChat', message)\n \n   return (\n     <>\n-      {activeChat &&\n-        activeChat.message.map((item) => {\n-          return <ChatMessage key={item.id} message={item} />\n-        })}\n+      {message.map((item) => {\n+        return <ChatMessage key={item.id} message={item} />\n+      })}\n     </>\n   )\n }\n"
                },
                {
                    "date": 1681981518029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,32 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 16:50:28\n+ * @LastEditTime: 2023-04-20 17:05:17\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n import { Box, createStyles, Text } from '@mantine/core'\n import { useChatStore, Chat } from '@/stores/ChatStore'\n import { ChatMessage } from './ChatMessage'\n-import { useMemo } from 'react'\n+import { useEffect } from 'react'\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n-  const message = useChatStore((state) => state.chats[activeChatId!].message)\n+  const chats = useChatStore((state) => state.chats)\n \n-  // const activeChat = chats[activeChatId!]\n+  useEffect(() => {\n+    if (activeChatId && chats[activeChatId]) {\n+      console.log('(chats[activeChatId!]', chats[activeChatId!])\n+    }\n+  }, [activeChatId, chats])\n \n-  // const content = useMemo(() => {\n-  //   if (activeChat?.message) return activeChat?.message\n-\n-  //   return []\n-  // }, [activeChat.message])\n-\n-  console.log('activeChat', message)\n-\n   return (\n     <>\n-      {message.map((item) => {\n+      {/* {message.map((item) => {\n         return <ChatMessage key={item.id} message={item} />\n-      })}\n+      })} */}\n     </>\n   )\n }\n"
                },
                {
                    "date": 1681981549808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n   const chats = useChatStore((state) => state.chats)\n+  console.log('chats', chats)\n \n   useEffect(() => {\n     if (activeChatId && chats[activeChatId]) {\n       console.log('(chats[activeChatId!]', chats[activeChatId!])\n"
                },
                {
                    "date": 1681981588581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 17:05:17\n+ * @LastEditTime: 2023-04-20 17:06:28\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -20,9 +20,9 @@\n   useEffect(() => {\n     if (activeChatId && chats[activeChatId]) {\n       console.log('(chats[activeChatId!]', chats[activeChatId!])\n     }\n-  }, [activeChatId, chats])\n+  }, [activeChatId, chats, chats[activeChatId!]])\n \n   return (\n     <>\n       {/* {message.map((item) => {\n"
                },
                {
                    "date": 1681981698371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n \n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n   const chats = useChatStore((state) => state.chats)\n-  console.log('chats', chats)\n \n   useEffect(() => {\n     if (activeChatId && chats[activeChatId]) {\n       console.log('(chats[activeChatId!]', chats[activeChatId!])\n"
                },
                {
                    "date": 1681981920965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 17:06:28\n+ * @LastEditTime: 2023-04-20 17:12:00\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -20,9 +20,9 @@\n     if (activeChatId && chats[activeChatId]) {\n       console.log('(chats[activeChatId!]', chats[activeChatId!])\n     }\n   }, [activeChatId, chats, chats[activeChatId!]])\n-\n+  console.log('chats[activeChatId!]', chats[activeChatId!])\n   return (\n     <>\n       {/* {message.map((item) => {\n         return <ChatMessage key={item.id} message={item} />\n"
                },
                {
                    "date": 1681982091936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 17:12:00\n+ * @LastEditTime: 2023-04-20 17:14:49\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n"
                },
                {
                    "date": 1681982238412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: Allen OYang\n  * @Email:  allenwill211@gmail.com\n  * @Date: 2023-04-20 00:19:37\n- * @LastEditTime: 2023-04-20 17:14:49\n+ * @LastEditTime: 2023-04-20 17:17:16\n  * @LastEditors: Allen OYang allenwill211@gmail.com\n  * @FilePath: /speak-gpt/src/components/ChatContent.tsx\n  */\n \n@@ -15,18 +15,21 @@\n export const ChatContent = () => {\n   const activeChatId = useChatStore((state) => state.activeChatId)\n   const chats = useChatStore((state) => state.chats)\n \n-  useEffect(() => {\n-    if (activeChatId && chats[activeChatId]) {\n-      console.log('(chats[activeChatId!]', chats[activeChatId!])\n-    }\n-  }, [activeChatId, chats, chats[activeChatId!]])\n-  console.log('chats[activeChatId!]', chats[activeChatId!])\n+  const activeChat = chats[activeChatId!]\n+\n+  // useEffect(() => {\n+  //   if (activeChatId && chats[activeChatId]) {\n+  //     console.log('(chats[activeChatId!]', chats[activeChatId!])\n+  //   }\n+  // }, [activeChatId, chats, chats[activeChatId!]])\n+  console.log('chats[activeChatId!] ChatContent :', chats[activeChatId!])\n   return (\n     <>\n-      {/* {message.map((item) => {\n-        return <ChatMessage key={item.id} message={item} />\n-      })} */}\n+      {activeChat &&\n+        activeChat.message.map((item) => {\n+          return <ChatMessage key={item.id} message={item} />\n+        })}\n     </>\n   )\n }\n"
                },
                {
                    "date": 1681982260280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,14 +17,8 @@\n   const chats = useChatStore((state) => state.chats)\n \n   const activeChat = chats[activeChatId!]\n \n-  // useEffect(() => {\n-  //   if (activeChatId && chats[activeChatId]) {\n-  //     console.log('(chats[activeChatId!]', chats[activeChatId!])\n-  //   }\n-  // }, [activeChatId, chats, chats[activeChatId!]])\n-  console.log('chats[activeChatId!] ChatContent :', chats[activeChatId!])\n   return (\n     <>\n       {activeChat &&\n         activeChat.message.map((item) => {\n"
                }
            ],
            "date": 1681921202802,
            "name": "Commit-0",
            "content": "\nconst ChatContent = () => {\n\n}"
        }
    ]
}