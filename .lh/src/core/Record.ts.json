{
    "sourceFile": "src/core/Record.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 54,
            "patches": [
                {
                    "date": 1681617772263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681618001509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import Recorder from 'js-audio-recorder';\n+import { Player } from '@/utils/MicrophoneRecord';\n+\n+const config = {\n+  sampleBits: 16,\n+  sampleRate: 16000,\n+  numChannels: 1,\n+  compiling: false,       // 是否开启边录音边转化（后期改用web worker）\n+}\n+\n+\n+export class Record {\n+  private recorder: Recorder | null = null;\n+  private playTimer: NodeJS.Timeout | null = null;\n+  constructor () {\n+    this.init()\n+  }\n+\n+  init() {\n+    this.recorder = new Recorder(config);\n+\n+    console.log('recorders.current', this.recorder)\n+\n+    this.recorder.onprocess = function (duration) {\n+      // this.setState({\n+      //     duration: duration.toFixed(5),\n+      // });\n+      // 推荐使用 onprogress\n+    }\n+\n+    this.recorder.onprogress = (params) => {\n+      // 此处控制数据的收集频率\n+      if (config.compiling) {\n+        console.log('音频总数据：', params.data);\n+      }\n+    }\n+\n+    this.recorder.onplay = () => {\n+      console.log('%c回调监听，开始播放音频', 'color: #2196f3')\n+    }\n+    this.recorder.onpauseplay = () => {\n+      console.log('%c回调监听，暂停播放音频', 'color: #2196f3')\n+    }\n+    this.recorder.onresumeplay = () => {\n+      console.log('%c回调监听，恢复播放音频', 'color: #2196f3')\n+    }\n+    this.recorder.onstopplay = () => {\n+      console.log('%c回调监听，停止播放音频', 'color: #2196f3')\n+    }\n+    this.recorder.onplayend = () => {\n+      console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n+      // 播放结束后，停止绘制canavs\n+      // this.stopDrawPlay();\n+    }\n+\n+    // 定时获取录音的数据并播放\n+    config.compiling && (this.playTimer = setInterval(() => {\n+      if (!this.recorder) {\n+        return;\n+      }\n+\n+      let newData = this.recorder.getNextData();\n+      if (!newData.length) {\n+        return;\n+      }\n+      let byteLength = newData[0].byteLength\n+      let buffer = new ArrayBuffer(newData.length * byteLength)\n+      let dataView = new DataView(buffer)\n+\n+      // 数据合并\n+      for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n+        for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n+          dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n+        }\n+      }\n+\n+      // 将录音数据转成WAV格式，并播放\n+      let a = Recorder.encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n+      let blob: any = new Blob([a], { type: 'audio/wav' });\n+\n+      blob.arrayBuffer().then((arraybuffer: any) => {\n+        Player.play(arraybuffer);\n+      });\n+    }, 3000))\n+  }\n+\n+  start() {\n+    try {\n+      this.recorder!.start().then(() => {\n+        return Promise.resolve()\n+      })\n+    } catch (error: any) {\n+      return Promise.reject(`异常了,${error.name}:${error.message}`)\n+    }\n+  }\n+\n+  play() {\n+    try {\n+      this.recorder?.play();\n+      return Promise.resolve()\n+    } catch (error) {\n+      return Promise.reject(error)\n+    }\n+  }\n+\n+}\n+\n"
                },
                {
                    "date": 1681622491987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import Recorder from 'js-audio-recorder';\n import { Player } from '@/utils/MicrophoneRecord';\n+import { AliyunTransformAudio } from '@/core/AliyunTransform'\n \n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n-  compiling: false,       // 是否开启边录音边转化（后期改用web worker）\n+  compiling: true,       // 是否开启边录音边转化（后期改用web worker）\n }\n \n \n export class Record {\n@@ -62,8 +63,9 @@\n       let newData = this.recorder.getNextData();\n       if (!newData.length) {\n         return;\n       }\n+\n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n       let dataView = new DataView(buffer)\n \n@@ -75,8 +77,9 @@\n       }\n \n       // 将录音数据转成WAV格式，并播放\n       let a = Recorder.encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n+      console.log('audio:>>>>', a)\n       let blob: any = new Blob([a], { type: 'audio/wav' });\n \n       blob.arrayBuffer().then((arraybuffer: any) => {\n         Player.play(arraybuffer);\n@@ -104,99 +107,4 @@\n   }\n \n }\n \n-import Recorder from 'js-audio-recorder';\n-import { Player } from '@/utils/MicrophoneRecord';\n-\n-const config = {\n-  sampleBits: 16,\n-  sampleRate: 16000,\n-  numChannels: 1,\n-  compiling: false,       // 是否开启边录音边转化（后期改用web worker）\n-}\n-\n-\n-export class Record {\n-  private recorder: Recorder | null = null;\n-  private playTimer: NodeJS.Timeout | null = null;\n-  constructor () {\n-    this.init()\n-  }\n-\n-  init () {\n-    this.recorder = new Recorder(config);\n-\n-    console.log('recorders.current', this.recorder)\n-\n-    this.recorder.onprocess = function (duration) {\n-      // this.setState({\n-      //     duration: duration.toFixed(5),\n-      // });\n-      // 推荐使用 onprogress\n-    }\n-\n-    this.recorder.onprogress = (params) => {\n-      // 此处控制数据的收集频率\n-      if (config.compiling) {\n-        console.log('音频总数据：', params.data);\n-      }\n-    }\n-\n-    this.recorder.onplay = () => {\n-      console.log('%c回调监听，开始播放音频', 'color: #2196f3')\n-    }\n-    this.recorder.onpauseplay = () => {\n-      console.log('%c回调监听，暂停播放音频', 'color: #2196f3')\n-    }\n-    this.recorder.onresumeplay = () => {\n-      console.log('%c回调监听，恢复播放音频', 'color: #2196f3')\n-    }\n-    this.recorder.onstopplay = () => {\n-      console.log('%c回调监听，停止播放音频', 'color: #2196f3')\n-    }\n-    this.recorder.onplayend = () => {\n-      console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n-      // 播放结束后，停止绘制canavs\n-      // this.stopDrawPlay();\n-    }\n-\n-    // 定时获取录音的数据并播放\n-    config.compiling && (this.playTimer = setInterval(() => {\n-      if (!this.recorder) {\n-        return;\n-      }\n-\n-      let newData = this.recorder.getNextData();\n-      if (!newData.length) {\n-        return;\n-      }\n-      let byteLength = newData[0].byteLength\n-      let buffer = new ArrayBuffer(newData.length * byteLength)\n-      let dataView = new DataView(buffer)\n-\n-      // 数据合并\n-      for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n-        for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n-          dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n-        }\n-      }\n-\n-      // 将录音数据转成WAV格式，并播放\n-      let a = Recorder.encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n-      let blob: any = new Blob([a], { type: 'audio/wav' });\n-\n-      blob.arrayBuffer().then((arraybuffer: any) => {\n-        Player.play(arraybuffer);\n-      });\n-    }, 3000))\n-  }\n-\n-  start() {\n-    this.recorder!.start().then(() => {\n-      console.log('开始录音');\n-    }, (error) => {\n-      console.log(`异常了,${error.name}:${error.message}`);\n-    });\n-  }\n-}\n-\n"
                },
                {
                    "date": 1681623584429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import Recorder from 'js-audio-recorder';\n+import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/core/AliyunTransform'\n \n const config = {\n"
                },
                {
                    "date": 1681623892187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/core/AliyunTransform'\n-\n+import {  encodeWAV } from './transform/transform';\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n@@ -28,14 +28,14 @@\n       // });\n       // 推荐使用 onprogress\n     }\n \n-    this.recorder.onprogress = (params) => {\n-      // 此处控制数据的收集频率\n-      if (config.compiling) {\n-        console.log('音频总数据：', params.data);\n-      }\n-    }\n+    // this.recorder.onprogress = (params) => {\n+    //   // 此处控制数据的收集频率\n+    //   if (config.compiling) {\n+    //     console.log('音频总数据：', params.data);\n+    //   }\n+    // }\n \n     this.recorder.onplay = () => {\n       console.log('%c回调监听，开始播放音频', 'color: #2196f3')\n     }\n@@ -76,10 +76,9 @@\n         }\n       }\n \n       // 将录音数据转成WAV格式，并播放\n-      let a = Recorder.encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n-      console.log('audio:>>>>', a)\n+      let a = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       let blob: any = new Blob([a], { type: 'audio/wav' });\n \n       blob.arrayBuffer().then((arraybuffer: any) => {\n         Player.play(arraybuffer);\n"
                },
                {
                    "date": 1681624096570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n-  compiling: true,       // 是否开启边录音边转化（后期改用web worker）\n+  compiling: false,       // 是否开启边录音边转化（后期改用web worker）\n }\n \n \n export class Record {\n"
                },
                {
                    "date": 1681624149736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n-import { AliyunTransformAudio } from '@/core/AliyunTransform'\n+import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n import {  encodeWAV } from './transform/transform';\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n"
                },
                {
                    "date": 1681624297354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n-  compiling: false,       // 是否开启边录音边转化（后期改用web worker）\n+  compiling: true,       // 是否开启边录音边转化（后期改用web worker）\n }\n \n \n export class Record {\n"
                },
                {
                    "date": 1681624306629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n         return;\n       }\n \n       let newData = this.recorder.getNextData();\n+      console.log('newData', newData)\n       if (!newData.length) {\n         return;\n       }\n \n"
                },
                {
                    "date": 1681624337907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,8 @@\n \n   init() {\n     this.recorder = new Recorder(config);\n \n-    console.log('recorders.current', this.recorder)\n-\n     this.recorder.onprocess = function (duration) {\n       // this.setState({\n       //     duration: duration.toFixed(5),\n       // });\n"
                },
                {
                    "date": 1681631792724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n         return;\n       }\n \n       let newData = this.recorder.getNextData();\n-      console.log('newData', newData)\n       if (!newData.length) {\n         return;\n       }\n \n"
                },
                {
                    "date": 1681632043842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,11 @@\n       // 将录音数据转成WAV格式，并播放\n       let a = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       let blob: any = new Blob([a], { type: 'audio/wav' });\n \n+      console.log('a', a)\n       blob.arrayBuffer().then((arraybuffer: any) => {\n-        Player.play(arraybuffer);\n+        // Player.play(arraybuffer);\n       });\n     }, 3000))\n   }\n \n"
                },
                {
                    "date": 1681632122050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n-import {  encodeWAV } from './transform/transform';\n+import { encodeWAV } from './transform/transform';\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n@@ -52,9 +52,13 @@\n       // this.stopDrawPlay();\n     }\n \n     // 定时获取录音的数据并播放\n-    config.compiling && (this.playTimer = setInterval(() => {\n+\n+  }\n+\n+  compiling() {\n+    this.playTimer = setInterval(() => {\n       if (!this.recorder) {\n         return;\n       }\n \n@@ -81,9 +85,9 @@\n       console.log('a', a)\n       blob.arrayBuffer().then((arraybuffer: any) => {\n         // Player.play(arraybuffer);\n       });\n-    }, 3000))\n+    }, 3000)\n   }\n \n   start() {\n     try {\n"
                },
                {
                    "date": 1681632151801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,14 @@\n       console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n       // 播放结束后，停止绘制canavs\n       // this.stopDrawPlay();\n     }\n-\n-    // 定时获取录音的数据并播放\n-\n+    config.compiling && this.compiling();\n   }\n \n+  /**\n+   * 实时录播\n+   */\n   compiling() {\n     this.playTimer = setInterval(() => {\n       if (!this.recorder) {\n         return;\n"
                },
                {
                    "date": 1681632390379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,14 +80,15 @@\n       }\n \n       // 将录音数据转成WAV格式，并播放\n       let a = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n-      let blob: any = new Blob([a], { type: 'audio/wav' });\n+      console.log('a', a)\n+      // let blob: any = new Blob([a], { type: 'audio/wav' });\n \n-      console.log('a', a)\n-      blob.arrayBuffer().then((arraybuffer: any) => {\n-        // Player.play(arraybuffer);\n-      });\n+      // console.log('a', a)\n+      // blob.arrayBuffer().then((arraybuffer: any) => {\n+      //   // Player.play(arraybuffer);\n+      // });\n     }, 3000)\n   }\n \n   start() {\n"
                },
                {
                    "date": 1681632547130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n       // });\n     }, 3000)\n   }\n \n-  start() {\n+  startRecord() {\n     try {\n       this.recorder!.start().then(() => {\n         return Promise.resolve()\n       })\n@@ -100,15 +100,14 @@\n       return Promise.reject(`异常了,${error.name}:${error.message}`)\n     }\n   }\n \n-  play() {\n-    try {\n-      this.recorder?.play();\n-      return Promise.resolve()\n-    } catch (error) {\n-      return Promise.reject(error)\n-    }\n+  stopRecord() {\n+    this.recorder!.stop();\n   }\n \n+  playRecord() {\n+    this.recorder?.play();\n+  }\n+\n }\n \n"
                },
                {
                    "date": 1681632908862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n import { encodeWAV } from './transform/transform';\n+import { WSRequest } from '@/utils/WsRequest';\n+\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n@@ -12,8 +14,10 @@\n \n export class Record {\n   private recorder: Recorder | null = null;\n   private playTimer: NodeJS.Timeout | null = null;\n+  private aliyun: AliyunTransformAudio | null = null;\n+\n   constructor () {\n     this.init()\n   }\n \n@@ -50,12 +54,25 @@\n       console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n       // 播放结束后，停止绘制canavs\n       // this.stopDrawPlay();\n     }\n-    config.compiling && this.compiling();\n+    if (config.compiling) {\n+      this.handleMessage()\n+      this.compiling();\n+    }\n   }\n \n   /**\n+   * 实时转播信息\n+   */\n+  handleMessage() {\n+    this.aliyun =  new AliyunTransformAudio();\n+  }\n+\n+\n+\n+\n+  /**\n    * 实时录播\n    */\n   compiling() {\n     this.playTimer = setInterval(() => {\n@@ -82,9 +99,8 @@\n       // 将录音数据转成WAV格式，并播放\n       let a = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       console.log('a', a)\n       // let blob: any = new Blob([a], { type: 'audio/wav' });\n-\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n       // });\n"
                },
                {
                    "date": 1681632953261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n+    this.aliyun.ws?.connect()\n   }\n \n \n \n"
                },
                {
                    "date": 1681633222847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,9 @@\n       console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n       // 播放结束后，停止绘制canavs\n       // this.stopDrawPlay();\n     }\n+    \n     if (config.compiling) {\n       this.handleMessage()\n       this.compiling();\n     }\n"
                },
                {
                    "date": 1681633261010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n     this.init()\n   }\n \n   init() {\n+    console.log('init>>>')\n     this.recorder = new Recorder(config);\n \n     this.recorder.onprocess = function (duration) {\n       // this.setState({\n@@ -54,9 +55,9 @@\n       console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n       // 播放结束后，停止绘制canavs\n       // this.stopDrawPlay();\n     }\n-    \n+\n     if (config.compiling) {\n       this.handleMessage()\n       this.compiling();\n     }\n"
                },
                {
                    "date": 1681633370470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,14 +67,11 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n-    this.aliyun.ws?.connect()\n+    this.aliyun.ws?.connect();\n   }\n \n-\n-\n-\n   /**\n    * 实时录播\n    */\n   compiling() {\n"
                },
                {
                    "date": 1681634278913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,12 @@\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n     this.aliyun.ws?.connect();\n+\n+    this.aliyun.ws?.onMessage((data: any) => {\n+\n+    })\n   }\n \n   /**\n    * 实时录播\n"
                },
                {
                    "date": 1681634299354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,10 @@\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n     this.aliyun.ws?.connect();\n \n-    this.aliyun.ws?.onMessage((data: any) => {\n-\n+    this.aliyun.ws?.event.on('message', (data: any) => {\n+      console.log('data', data)\n     })\n   }\n \n   /**\n"
                },
                {
                    "date": 1681634442598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n     this.aliyun.ws?.connect();\n \n-    this.aliyun.ws?.event.on('message', (data: any) => {\n+    this.aliyun.on('message', (data: any) => {\n       console.log('data', data)\n     })\n   }\n \n"
                },
                {
                    "date": 1681634781093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n     this.aliyun.ws?.connect();\n \n-    this.aliyun.on('message', (data: any) => {\n+    this.aliyun.event!.on('message', (data: any) => {\n       console.log('data', data)\n     })\n   }\n \n"
                },
                {
                    "date": 1681635016810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,13 +67,13 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n-    this.aliyun.ws?.connect();\n-\n     this.aliyun.event!.on('message', (data: any) => {\n       console.log('data', data)\n     })\n+\n+    \n   }\n \n   /**\n    * 实时录播\n"
                },
                {
                    "date": 1681635034649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,11 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n-    this.aliyun.event!.on('message', (data: any) => {\n-      console.log('data', data)\n-    })\n+    // this.aliyun.event!.on('message', (data: any) => {\n+    //   console.log('data', data)\n+    // })\n \n     \n   }\n \n"
                },
                {
                    "date": 1681635078374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,11 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n+    this.aliyun.event!.on('open', (event) => {\n+      console.log('open', event)\n+    })\n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n     // })\n \n"
                },
                {
                    "date": 1681635094200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n-    this.aliyun.event!.on('open', (event) => {\n+    this.aliyun.ws!.event.on('open', (event) => {\n       console.log('open', event)\n     })\n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n"
                },
                {
                    "date": 1681635333787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,15 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n-    this.aliyun.ws!.event.on('open', (event) => {\n+    this.aliyun.event!.on('open', (event) => {\n       console.log('open', event)\n     })\n+\n+    this.aliyun.event!.on('message', (event) => {\n+      console.log('message', event)\n+    })\n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n     // })\n \n"
                },
                {
                    "date": 1681635394010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n       console.log('open', event)\n     })\n \n     this.aliyun.event!.on('message', (event) => {\n-      console.log('message', event)\n+      console.log('message', event.data)\n     })\n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n     // })\n"
                },
                {
                    "date": 1681635480857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n       console.log('open', event)\n     })\n \n     this.aliyun.event!.on('message', (event) => {\n-      console.log('message', event.data)\n+      console.log('message', event)\n     })\n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n     // })\n"
                },
                {
                    "date": 1681635665561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,11 @@\n import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n import { encodeWAV } from './transform/transform';\n import { WSRequest } from '@/utils/WsRequest';\n \n+\n+const token = `7bce9de7bf1242de9e060caa6bdcd72c`\n+\n const config = {\n   sampleBits: 16,\n   sampleRate: 16000,\n   numChannels: 1,\n@@ -14,9 +17,9 @@\n \n export class Record {\n   private recorder: Recorder | null = null;\n   private playTimer: NodeJS.Timeout | null = null;\n-  private aliyun: AliyunTransformAudio | null = null;\n+  private aliyun: WSRequest | null = null;\n \n   constructor () {\n     this.init()\n   }\n@@ -66,16 +69,27 @@\n   /**\n    * 实时转播信息\n    */\n   handleMessage() {\n-    this.aliyun =  new AliyunTransformAudio();\n+    this.aliyun =  new WSRequest(`wss://nls-gateway.cn-shanghai.aliyuncs.com/ws/v1?token=${token}`);\n+    this.aliyun.connect();  \n+\n     this.aliyun.event!.on('open', (event) => {\n       console.log('open', event)\n     })\n \n     this.aliyun.event!.on('message', (event) => {\n       console.log('message', event)\n     })\n+\n+    this.aliyun.send(JSON.stringify({ \n+      test: '1',\n+      test2: '2',\n+\n+    }))\n+\n+    \n+\n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n     // })\n \n"
                },
                {
                    "date": 1681635834294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,23 +71,16 @@\n    */\n   handleMessage() {\n     this.aliyun =  new WSRequest(`wss://nls-gateway.cn-shanghai.aliyuncs.com/ws/v1?token=${token}`);\n     this.aliyun.connect();  \n-\n+    const self = this.aliyun\n     this.aliyun.event!.on('open', (event) => {\n-      console.log('open', event)\n+    \n     })\n \n     this.aliyun.event!.on('message', (event) => {\n-      console.log('message', event)\n+      self.send(JSON.stringify({test: '1',test2: '2',}))\n     })\n-\n-    this.aliyun.send(JSON.stringify({ \n-      test: '1',\n-      test2: '2',\n-\n-    }))\n-\n     \n \n     // this.aliyun.event!.on('message', (data: any) => {\n     //   console.log('data', data)\n"
                },
                {
                    "date": 1681635863056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,14 +72,15 @@\n   handleMessage() {\n     this.aliyun =  new WSRequest(`wss://nls-gateway.cn-shanghai.aliyuncs.com/ws/v1?token=${token}`);\n     this.aliyun.connect();  \n     const self = this.aliyun\n+\n     this.aliyun.event!.on('open', (event) => {\n-    \n+      self.send(JSON.stringify({test: '1',test2: '2',}))\n     })\n \n     this.aliyun.event!.on('message', (event) => {\n-      self.send(JSON.stringify({test: '1',test2: '2',}))\n+      console.log('message', event)\n     })\n     \n \n     // this.aliyun.event!.on('message', (data: any) => {\n"
                },
                {
                    "date": 1681642162533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n import { encodeWAV } from './transform/transform';\n-import { WSRequest } from '@/utils/WsRequest';\n \n \n const token = `7bce9de7bf1242de9e060caa6bdcd72c`\n \n@@ -17,9 +16,9 @@\n \n export class Record {\n   private recorder: Recorder | null = null;\n   private playTimer: NodeJS.Timeout | null = null;\n-  private aliyun: WSRequest | null = null;\n+  private aliyun: AliyunTransformAudio | null = null;\n \n   constructor () {\n     this.init()\n   }\n@@ -69,14 +68,16 @@\n   /**\n    * 实时转播信息\n    */\n   handleMessage() {\n-    this.aliyun =  new WSRequest(`wss://nls-gateway.cn-shanghai.aliyuncs.com/ws/v1?token=${token}`);\n-    this.aliyun.connect();  \n+    this.aliyun =  new AliyunTransformAudio();\n+    // this.aliyun.connect();  \n     const self = this.aliyun\n \n     this.aliyun.event!.on('open', (event) => {\n-      self.send(JSON.stringify({test: '1',test2: '2',}))\n+      self.send(JSON.stringify({\n+        namespace: 'SpeechTranscriber',\n+      }))\n     })\n \n     this.aliyun.event!.on('message', (event) => {\n       console.log('message', event)\n"
                },
                {
                    "date": 1681642395301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,11 +73,11 @@\n     // this.aliyun.connect();  \n     const self = this.aliyun\n \n     this.aliyun.event!.on('open', (event) => {\n-      self.send(JSON.stringify({\n+      self.send({\n         namespace: 'SpeechTranscriber',\n-      }))\n+      })\n     })\n \n     this.aliyun.event!.on('message', (event) => {\n       console.log('message', event)\n"
                },
                {
                    "date": 1681643010072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,27 +69,13 @@\n    * 实时转播信息\n    */\n   handleMessage() {\n     this.aliyun =  new AliyunTransformAudio();\n-    // this.aliyun.connect();  \n     const self = this.aliyun\n \n-    this.aliyun.event!.on('open', (event) => {\n-      self.send({\n-        namespace: 'SpeechTranscriber',\n-      })\n-    })\n-\n     this.aliyun.event!.on('message', (event) => {\n       console.log('message', event)\n     })\n-    \n-\n-    // this.aliyun.event!.on('message', (data: any) => {\n-    //   console.log('data', data)\n-    // })\n-\n-    \n   }\n \n   /**\n    * 实时录播\n@@ -118,8 +104,9 @@\n \n       // 将录音数据转成WAV格式，并播放\n       let a = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       console.log('a', a)\n+      this.aliyun?.send(a)\n       // let blob: any = new Blob([a], { type: 'audio/wav' });\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n"
                },
                {
                    "date": 1681643089634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,9 @@\n     }\n   }\n \n   stopRecord() {\n+    this.playTimer && clearInterval(this.playTimer);\n     this.recorder!.stop();\n   }\n \n   playRecord() {\n"
                },
                {
                    "date": 1681643289032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,11 +102,11 @@\n         }\n       }\n \n       // 将录音数据转成WAV格式，并播放\n-      let a = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n-      console.log('a', a)\n-      this.aliyun?.send(a)\n+      let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n+      console.log('audioDB', audioDB)\n+      this.aliyun?.send(audioDB)\n       // let blob: any = new Blob([a], { type: 'audio/wav' });\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n"
                },
                {
                    "date": 1681643624952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n \n       // 将录音数据转成WAV格式，并播放\n       let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       console.log('audioDB', audioDB)\n-      this.aliyun?.send(audioDB)\n+      // this.aliyun?.send(audioDB)\n       // let blob: any = new Blob([a], { type: 'audio/wav' });\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n"
                },
                {
                    "date": 1681644574803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n \n       // 将录音数据转成WAV格式，并播放\n       let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       console.log('audioDB', audioDB)\n-      // this.aliyun?.send(audioDB)\n+      this.aliyun?.send(audioDB)\n       // let blob: any = new Blob([a], { type: 'audio/wav' });\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n"
                },
                {
                    "date": 1681644788648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n       // });\n-    }, 3000)\n+    }, 100)\n   }\n \n   startRecord() {\n     try {\n"
                },
                {
                    "date": 1681645026443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,10 +103,9 @@\n       }\n \n       // 将录音数据转成WAV格式，并播放\n       let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n-      console.log('audioDB', audioDB)\n-      this.aliyun?.send(audioDB)\n+      this.aliyun?.sendBlob(new Blob([audioDB.buffer], { type: 'audio/wav' }))\n       // let blob: any = new Blob([a], { type: 'audio/wav' });\n       // console.log('a', a)\n       // blob.arrayBuffer().then((arraybuffer: any) => {\n       //   // Player.play(arraybuffer);\n"
                },
                {
                    "date": 1681645129207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,20 +59,18 @@\n       // this.stopDrawPlay();\n     }\n \n     if (config.compiling) {\n-      this.handleMessage()\n       this.compiling();\n     }\n   }\n \n   /**\n    * 实时转播信息\n    */\n   handleMessage() {\n-    this.aliyun =  new AliyunTransformAudio();\n-    const self = this.aliyun\n-\n+    if (!this.aliyun) return;\n+    this.aliyun = new AliyunTransformAudio();\n     this.aliyun.event!.on('message', (event) => {\n       console.log('message', event)\n     })\n   }\n@@ -115,8 +113,9 @@\n \n   startRecord() {\n     try {\n       this.recorder!.start().then(() => {\n+        this.handleMessage()\n         return Promise.resolve()\n       })\n     } catch (error: any) {\n       return Promise.reject(`异常了,${error.name}:${error.message}`)\n"
                },
                {
                    "date": 1681645174413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n   /**\n    * 实时转播信息\n    */\n   handleMessage() {\n-    if (!this.aliyun) return;\n+    if (this.aliyun) return;\n     this.aliyun = new AliyunTransformAudio();\n     this.aliyun.event!.on('message', (event) => {\n       console.log('message', event)\n     })\n"
                },
                {
                    "date": 1681645230427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,14 +102,9 @@\n \n       // 将录音数据转成WAV格式，并播放\n       let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       this.aliyun?.sendBlob(new Blob([audioDB.buffer], { type: 'audio/wav' }))\n-      // let blob: any = new Blob([a], { type: 'audio/wav' });\n-      // console.log('a', a)\n-      // blob.arrayBuffer().then((arraybuffer: any) => {\n-      //   // Player.play(arraybuffer);\n-      // });\n-    }, 100)\n+    }, 500)\n   }\n \n   startRecord() {\n     try {\n"
                },
                {
                    "date": 1681647632722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,20 +90,22 @@\n       }\n \n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n-      let dataView = new DataView(buffer)\n \n-      // 数据合并\n-      for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n-        for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n-          dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n-        }\n-      }\n+      this.aliyun?.sendBlob(new Blob([buffer], { type: 'audio/wav' }))\n+      // let dataView = new DataView(buffer)\n \n-      // 将录音数据转成WAV格式，并播放\n-      let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n-      this.aliyun?.sendBlob(new Blob([audioDB.buffer], { type: 'audio/wav' }))\n+      // // 数据合并\n+      // for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n+      //   for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n+      //     dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n+      //   }\n+      // }\n+\n+      // // 将录音数据转成WAV格式，并播放\n+      // let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n+      // this.aliyun?.sendBlob(new Blob([audioDB.buffer], { type: 'audio/wav' }))\n     }, 500)\n   }\n \n   startRecord() {\n"
                },
                {
                    "date": 1681647657175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,10 +91,10 @@\n \n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n \n-      this.aliyun?.sendBlob(new Blob([buffer], { type: 'audio/wav' }))\n-      // let dataView = new DataView(buffer)\n+      let dataView = new DataView(buffer)\n+      this.aliyun?.sendBlob(new Blob([dataView], { type: 'audio/wav' }))\n \n       // // 数据合并\n       // for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n       //   for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n"
                },
                {
                    "date": 1681647700957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n \n       let dataView = new DataView(buffer)\n-      this.aliyun?.sendBlob(new Blob([dataView], { type: 'audio/wav' }))\n+      this.aliyun?.sendBlob(new Blob([dataView]))\n \n       // // 数据合并\n       // for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n       //   for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n"
                },
                {
                    "date": 1681647742943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n \n       let dataView = new DataView(buffer)\n+      console.log('dataView', dataView)\n       this.aliyun?.sendBlob(new Blob([dataView]))\n \n       // // 数据合并\n       // for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n"
                },
                {
                    "date": 1681648231845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import Recorder from '@/core';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n import { encodeWAV } from './transform/transform';\n+import { v4 as uuidv4 } from 'uuid';\n \n-\n const token = `7bce9de7bf1242de9e060caa6bdcd72c`\n \n const config = {\n   sampleBits: 16,\n@@ -120,13 +120,20 @@\n     }\n   }\n \n   stopRecord() {\n+    this.aliyun?.send({\n+      headers: {\n+        message_id: uuidv4().replace(/-/g, ''),\n+        name: 'StartTranscription',\n+      },\n+    })\n     this.playTimer && clearInterval(this.playTimer);\n     this.recorder!.stop();\n   }\n \n   playRecord() {\n+    \n     this.recorder?.play();\n   }\n \n }\n"
                },
                {
                    "date": 1681648242864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,9 @@\n   stopRecord() {\n     this.aliyun?.send({\n       headers: {\n         message_id: uuidv4().replace(/-/g, ''),\n-        name: 'StartTranscription',\n+        name: 'StopTranscription',\n       },\n     })\n     this.playTimer && clearInterval(this.playTimer);\n     this.recorder!.stop();\n"
                },
                {
                    "date": 1681695235733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,10 @@\n       if (!newData.length) {\n         return;\n       }\n \n+      console.log('123', newData)\n+\n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n \n       let dataView = new DataView(buffer)\n"
                },
                {
                    "date": 1681696912619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n-import Recorder from '@/core';\n+import Recorder from '@/core/Record/index';\n import { Player } from '@/utils/MicrophoneRecord';\n import { AliyunTransformAudio } from '@/Transform/AliyunTransform'\n-import { encodeWAV } from './transform/transform';\n import { v4 as uuidv4 } from 'uuid';\n \n const token = `7bce9de7bf1242de9e060caa6bdcd72c`\n \n@@ -88,24 +87,25 @@\n       if (!newData.length) {\n         return;\n       }\n \n-      console.log('123', newData)\n \n       let byteLength = newData[0].byteLength\n       let buffer = new ArrayBuffer(newData.length * byteLength)\n \n       let dataView = new DataView(buffer)\n+     \n+\n+      // // 数据合并\n+      for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n+        for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n+          dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n+        }\n+      }\n+\n       console.log('dataView', dataView)\n       this.aliyun?.sendBlob(new Blob([dataView]))\n \n-      // // 数据合并\n-      // for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n-      //   for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n-      //     dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n-      //   }\n-      // }\n-\n       // // 将录音数据转成WAV格式，并播放\n       // let audioDB = encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n       // this.aliyun?.sendBlob(new Blob([audioDB.buffer], { type: 'audio/wav' }))\n     }, 500)\n"
                }
            ],
            "date": 1681617772263,
            "name": "Commit-0",
            "content": "import Recorder from 'js-audio-recorder';\nimport { Player } from '@/utils/MicrophoneRecord';\n\nconst config = {\n  sampleBits: 16,\n  sampleRate: 16000,\n  numChannels: 1,\n  compiling: false,       // 是否开启边录音边转化（后期改用web worker）\n}\n\n\nexport class Record {\n  private recorder: Recorder | null = null;\n  private playTimer: NodeJS.Timeout | null = null;\n  constructor () {\n    this.init()\n  }\n\n  init () {\n    this.recorder = new Recorder(config);\n\n    console.log('recorders.current', this.recorder)\n\n    this.recorder.onprocess = function (duration) {\n      // this.setState({\n      //     duration: duration.toFixed(5),\n      // });\n      // 推荐使用 onprogress\n    }\n\n    this.recorder.onprogress = (params) => {\n      // 此处控制数据的收集频率\n      if (config.compiling) {\n        console.log('音频总数据：', params.data);\n      }\n    }\n\n    this.recorder.onplay = () => {\n      console.log('%c回调监听，开始播放音频', 'color: #2196f3')\n    }\n    this.recorder.onpauseplay = () => {\n      console.log('%c回调监听，暂停播放音频', 'color: #2196f3')\n    }\n    this.recorder.onresumeplay = () => {\n      console.log('%c回调监听，恢复播放音频', 'color: #2196f3')\n    }\n    this.recorder.onstopplay = () => {\n      console.log('%c回调监听，停止播放音频', 'color: #2196f3')\n    }\n    this.recorder.onplayend = () => {\n      console.log('%c回调监听，音频已经完成播放', 'color: #2196f3')\n      // 播放结束后，停止绘制canavs\n      // this.stopDrawPlay();\n    }\n\n    // 定时获取录音的数据并播放\n    config.compiling && (this.playTimer = setInterval(() => {\n      if (!this.recorder) {\n        return;\n      }\n\n      let newData = this.recorder.getNextData();\n      if (!newData.length) {\n        return;\n      }\n      let byteLength = newData[0].byteLength\n      let buffer = new ArrayBuffer(newData.length * byteLength)\n      let dataView = new DataView(buffer)\n\n      // 数据合并\n      for (let i = 0, iLen = newData.length; i < iLen; ++i) {\n        for (let j = 0, jLen = newData[i].byteLength; j < jLen; ++j) {\n          dataView.setInt8(i * byteLength + j, newData[i].getInt8(j))\n        }\n      }\n\n      // 将录音数据转成WAV格式，并播放\n      let a = Recorder.encodeWAV(dataView, config.sampleRate, config.sampleRate, config.numChannels, config.sampleBits, false)\n      let blob: any = new Blob([a], { type: 'audio/wav' });\n\n      blob.arrayBuffer().then((arraybuffer: any) => {\n        Player.play(arraybuffer);\n      });\n    }, 3000))\n  }\n\n  start() {\n    this.recorder!.start().then(() => {\n      console.log('开始录音');\n    }, (error) => {\n      console.log(`异常了,${error.name}:${error.message}`);\n    });\n  }\n}\n\n"
        }
    ]
}