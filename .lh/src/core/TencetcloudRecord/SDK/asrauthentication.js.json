{
    "sourceFile": "src/core/TencetcloudRecord/SDK/asrauthentication.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1681702322681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681704848894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+/** 获取签名 start */\r\n+\r\n+function toUint8Array(wordArray) {\r\n+  // Shortcuts\r\n+  const words = wordArray.words;\r\n+  const sigBytes = wordArray.sigBytes;\r\n+\r\n+  // Convert\r\n+  const u8 = new Uint8Array(sigBytes);\r\n+  for (let i = 0; i < sigBytes; i++) {\r\n+    u8[i] = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n+  }\r\n+  return u8;\r\n+}\r\n+\r\n+function Uint8ArrayToString(fileData){\r\n+  let dataString = '';\r\n+  for (let i = 0; i < fileData.length; i++) {\r\n+    dataString += String.fromCharCode(fileData[i]);\r\n+  }\r\n+  return dataString;\r\n+}\r\n+// 签名函数示例\r\n+export function signCallback(signStr) {\r\n+  const secretKey = config.secretKey;\r\n+  const hash = window.CryptoJSTest.HmacSHA1(signStr, secretKey);\r\n+  const bytes = Uint8ArrayToString(toUint8Array(hash));\r\n+  return window.btoa(bytes);\r\n+}\r\n+\r\n+/** 获取签名 end */\r\n"
                },
                {
                    "date": 1681705187963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+/** 获取签名 start */\r\n+\r\n+function toUint8Array(wordArray) {\r\n+  // Shortcuts\r\n+  const words = wordArray.words;\r\n+  const sigBytes = wordArray.sigBytes;\r\n+\r\n+  // Convert\r\n+  const u8 = new Uint8Array(sigBytes);\r\n+  for (let i = 0; i < sigBytes; i++) {\r\n+    u8[i] = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n+  }\r\n+  return u8;\r\n+}\r\n+\r\n+function Uint8ArrayToString(fileData){\r\n+  let dataString = '';\r\n+  for (let i = 0; i < fileData.length; i++) {\r\n+    dataString += String.fromCharCode(fileData[i]);\r\n+  }\r\n+  return dataString;\r\n+}\r\n+// 签名函数示例\r\n+export function signCallback(signStr, key) {\r\n+  const secretKey = key;\r\n+  // const secretKey = config.secretKey;\r\n+  const hash = window.CryptoJSTest.HmacSHA1(signStr, secretKey);\r\n+  const bytes = Uint8ArrayToString(toUint8Array(hash));\r\n+  return window.btoa(bytes);\r\n+}\r\n+\r\n+/** 获取签名 end */\r\n"
                },
                {
                    "date": 1681711752088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n /** 获取签名 start */\r\n+import  crypto from 'crypto-js'\r\n \r\n function toUint8Array(wordArray) {\r\n   // Shortcuts\r\n   const words = wordArray.words;\r\n@@ -23,72 +24,10 @@\n // 签名函数示例\r\n export function signCallback(signStr, key) {\r\n   const secretKey = key;\r\n   // const secretKey = config.secretKey;\r\n-  const hash = window.CryptoJSTest.HmacSHA1(signStr, secretKey);\r\n+  const hash = crypto.HmacSHA1(signStr, secretKey);\r\n   const bytes = Uint8ArrayToString(toUint8Array(hash));\r\n   return window.btoa(bytes);\r\n }\r\n \r\n /** 获取签名 end */\r\n-/** 获取签名 start */\r\n-\r\n-function toUint8Array(wordArray) {\r\n-  // Shortcuts\r\n-  const words = wordArray.words;\r\n-  const sigBytes = wordArray.sigBytes;\r\n-\r\n-  // Convert\r\n-  const u8 = new Uint8Array(sigBytes);\r\n-  for (let i = 0; i < sigBytes; i++) {\r\n-    u8[i] = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n-  }\r\n-  return u8;\r\n-}\r\n-\r\n-function Uint8ArrayToString(fileData){\r\n-  let dataString = '';\r\n-  for (let i = 0; i < fileData.length; i++) {\r\n-    dataString += String.fromCharCode(fileData[i]);\r\n-  }\r\n-  return dataString;\r\n-}\r\n-// 签名函数示例\r\n-export function signCallback(signStr) {\r\n-  const secretKey = config.secretKey;\r\n-  const hash = window.CryptoJSTest.HmacSHA1(signStr, secretKey);\r\n-  const bytes = Uint8ArrayToString(toUint8Array(hash));\r\n-  return window.btoa(bytes);\r\n-}\r\n-\r\n-/** 获取签名 end */\r\n-/** 获取签名 start */\r\n-\r\n-function toUint8Array(wordArray) {\r\n-  // Shortcuts\r\n-  const words = wordArray.words;\r\n-  const sigBytes = wordArray.sigBytes;\r\n-\r\n-  // Convert\r\n-  const u8 = new Uint8Array(sigBytes);\r\n-  for (let i = 0; i < sigBytes; i++) {\r\n-    u8[i] = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n-  }\r\n-  return u8;\r\n-}\r\n-\r\n-function Uint8ArrayToString(fileData){\r\n-  let dataString = '';\r\n-  for (let i = 0; i < fileData.length; i++) {\r\n-    dataString += String.fromCharCode(fileData[i]);\r\n-  }\r\n-  return dataString;\r\n-}\r\n-// 签名函数示例\r\n-function signCallback(signStr) {\r\n-  const secretKey = config.secretKey;\r\n-  const hash = window.CryptoJSTest.HmacSHA1(signStr, secretKey);\r\n-  const bytes = Uint8ArrayToString(toUint8Array(hash));\r\n-  return window.btoa(bytes);\r\n-}\r\n-\r\n-/** 获取签名 end */\r\n"
                }
            ],
            "date": 1681702322681,
            "name": "Commit-0",
            "content": "/** 获取签名 start */\r\n\r\nfunction toUint8Array(wordArray) {\r\n  // Shortcuts\r\n  const words = wordArray.words;\r\n  const sigBytes = wordArray.sigBytes;\r\n\r\n  // Convert\r\n  const u8 = new Uint8Array(sigBytes);\r\n  for (let i = 0; i < sigBytes; i++) {\r\n    u8[i] = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n  }\r\n  return u8;\r\n}\r\n\r\nfunction Uint8ArrayToString(fileData){\r\n  let dataString = '';\r\n  for (let i = 0; i < fileData.length; i++) {\r\n    dataString += String.fromCharCode(fileData[i]);\r\n  }\r\n  return dataString;\r\n}\r\n// 签名函数示例\r\nfunction signCallback(signStr) {\r\n  const secretKey = config.secretKey;\r\n  const hash = window.CryptoJSTest.HmacSHA1(signStr, secretKey);\r\n  const bytes = Uint8ArrayToString(toUint8Array(hash));\r\n  return window.btoa(bytes);\r\n}\r\n\r\n/** 获取签名 end */\r\n"
        }
    ]
}